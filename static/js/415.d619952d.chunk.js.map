{"version":3,"file":"static/js/415.d619952d.chunk.js","mappings":"8NAGaA,GAAeC,EAAAA,EAAAA,GAAO,MAAPA,CAAH,wRAaZC,GAAYD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,8gBAkBTG,GAAaH,EAAAA,EAAAA,GAAO,KAAPA,CAAH,sEAKVI,GAAcJ,EAAAA,EAAAA,GAAO,MAAPA,CAAH,gE,SCHxB,EA3BkB,SAAC,GAAsB,IAApBK,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACT,EAAD,UACGM,EAAOI,KAAI,SAAAC,GACV,OACE,UAACT,EAAD,CAEEU,GAAE,UAAKL,GAAL,OAAYI,EAAME,IACpBC,MAAO,CAAEC,KAAMP,GAHjB,WAKE,SAACJ,EAAD,UAAaO,EAAMK,QAClBL,EAAMM,aACL,SAACZ,EAAD,CACEa,IAAG,yCAAoCP,EAAMM,aAC7CE,IAAKR,EAAMK,SAGb,SAACX,EAAD,CAAaa,IAAKE,EAAcD,IAAKR,EAAMK,UAXxCL,EAAME,GAehB,KAGN,C,sFCPD,UAtBa,WACX,OAA4BQ,EAAAA,EAAAA,UAAS,MAArC,eAAOf,EAAP,KAAegB,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,IACbE,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GACJN,EAAUM,EAAKC,SACfL,GAAa,EACd,IACAM,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAlB,GACb,GAAE,KAGD,gCACGzB,IAAU,SAAC,IAAD,CAAWA,OAAQA,EAAQC,KAAK,YAC1CgB,IAAa,SAAC,IAAD,MAGnB,C","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/Home.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MovieGallery = styled('div')`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 24px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const MovieLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  align-self: flex-end;\n  color: #111111;\n  box-shadow: 0px 1px 6px rgba(46, 47, 66, 0.08);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    transform: scale(1.03);\n    color: #31d0aa;\n    box-shadow: 0px 1px 6px rgba(46, 47, 66, 0.08),\n      0px 1px 1px rgba(46, 47, 66, 0.16), 0px 2px 1px rgba(46, 47, 66, 0.08);\n  }\n`;\n\nexport const MovieTitle = styled('h2')`\n  text-align: center;\n  margin-bottom: 8px;\n`;\n\nexport const MoviePoster = styled('img')`\n  height: 400px;\n  object-fit: cover;\n`;\n","import { useLocation } from 'react-router-dom';\nimport defaultImage from 'images/defaultImage.jpg';\nimport {\n  MovieGallery,\n  MovieTitle,\n  MoviePoster,\n  MovieLink,\n} from 'components/MovieList/MovieList.styled';\n\nconst MovieList = ({ movies, path }) => {\n  const location = useLocation();\n  return (\n    <MovieGallery>\n      {movies.map(movie => {\n        return (\n          <MovieLink\n            key={movie.id}\n            to={`${path}${movie.id}`}\n            state={{ from: location }}\n          >\n            <MovieTitle>{movie.title}</MovieTitle>\n            {movie.poster_path ? (\n              <MoviePoster\n                src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                alt={movie.title}\n              />\n            ) : (\n              <MoviePoster src={defaultImage} alt={movie.title} />\n            )}\n          </MovieLink>\n        );\n      })}\n    </MovieGallery>\n  );\n};\n\nexport default MovieList;\n","import { useState, useEffect } from 'react';\nimport { getTrending } from 'services/fetchAPI';\nimport Loader from 'components/Loader/Loader';\nimport MovieList from 'components/MovieList/MovieList';\n\nconst Home = () => {\n  const [movies, setMovies] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getTrending()\n      .then(data => {\n        setMovies(data.results);\n        setIsLoading(false);\n      })\n      .catch(err => console.error(err));\n  }, []);\n\n  return (\n    <>\n      {movies && <MovieList movies={movies} path=\"movies/\" />}\n      {isLoading && <Loader />}\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["MovieGallery","styled","MovieLink","Link","MovieTitle","MoviePoster","movies","path","location","useLocation","map","movie","to","id","state","from","title","poster_path","src","alt","defaultImage","useState","setMovies","isLoading","setIsLoading","useEffect","getTrending","then","data","results","catch","err","console","error"],"sourceRoot":""}