{"version":3,"file":"static/js/475.ee02257f.chunk.js","mappings":"kRAGaA,GAAaC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,+c,SCGvB,EAJiB,SAAC,GAAsB,IAApBE,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SACtB,OAAO,SAACJ,EAAD,CAAYG,GAAIA,EAAhB,SAAqBC,GAC7B,ECGKC,GAAYC,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IACjBC,GAAiBD,EAAAA,EAAAA,OAAK,kBAC1B,6BAD0B,IAiC5B,EA7BqB,WAAO,IAAD,IACzB,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAYnD,OAVAC,EAAAA,EAAAA,YAAU,WACRT,GAAa,IACbU,EAAAA,EAAAA,IAAgBT,GACbU,MAAK,SAAAC,GACJd,EAASc,GACTZ,GAAa,EACd,IACAa,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAlB,GACb,GAAE,CAACb,KAGF,iBAAKgB,MAAO,CAAEC,SAAU,KAAMC,WAAY,OAAQC,YAAa,QAA/D,WACE,SAAC,EAAD,CAAU7B,GAAIc,EAAYgB,QAA1B,UACE,SAAC,MAAD,MAEDxB,IAAS,SAACJ,EAAD,CAAWI,MAAOA,IAC3BA,IAAS,SAACF,EAAD,IACTI,IAAa,SAACuB,EAAA,EAAD,MAGnB,C,kMCrCKC,EAAW,gCACXC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIOC,EAAW,mCAAG,sGACFC,EAAAA,EAAAA,IAAA,UAClBP,EADkB,qCAErBC,GAHuB,cACnBO,EADmB,OAKnBnB,EAAOmB,EAASnB,KALG,kBAMlBA,GANkB,2CAAH,qDASXF,EAAe,mCAAG,WAAMT,GAAN,yFACN6B,EAAAA,EAAAA,IAAA,UAAaP,EAAb,iBAA8BtB,GAAWuB,GADnC,cACvBO,EADuB,OAEvBnB,EAAOmB,EAASnB,KAFO,kBAGtBA,GAHsB,2CAAH,sDAMfoB,EAAY,mCAAG,WAAM/B,GAAN,yFACH6B,EAAAA,EAAAA,IAAA,UAClBP,EADkB,iBACDtB,EADC,YAErBuB,GAHwB,cACpBO,EADoB,OAKpBnB,EAAOmB,EAASnB,KALI,kBAMnBA,GANmB,2CAAH,sDASZqB,EAAe,mCAAG,WAAMhC,GAAN,yFACN6B,EAAAA,EAAAA,IAAA,UAClBP,EADkB,iBACDtB,EADC,YAErBuB,GAH2B,cACvBO,EADuB,OAKvBnB,EAAOmB,EAASnB,KALO,kBAMtBA,GANsB,2CAAH,sDASfsB,EAAe,mCAAG,WAAMC,GAAN,yFACNL,EAAAA,EAAAA,IAAA,UAClBP,EADkB,8BACYY,EADZ,WAErBX,GAH2B,cACvBO,EADuB,OAKvBnB,EAAOmB,EAASnB,KALO,kBAMtBA,GANsB,2CAAH,qD","sources":["components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","pages/MovieDetails.jsx","services/fetchAPI.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\npadding: 0 4px;\ndisplay: inline-flex;\nalign-items: center;\n  border: 2px solid #293b4c;\n  border-radius: 12px;\n  color: #293b4c;\n  font-size: 36px;\n  margin-bottom: 16px;\n  transition: \n    color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n     transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n     border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    color: #5fc3e4;\n    transform: scale(1.2);\n    border: 2px solid #5fc3e4;\n`;\n","import { StyledLink } from 'components/BackLink/BackLink.styled';\n\nconst BackLink = ({ to, children }) => {\n  return <StyledLink to={to}>{children}</StyledLink>;\n};\n\nexport default BackLink;\n","import { lazy } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect, useRef } from 'react';\nimport { getMovieDetails } from 'services/fetchAPI';\nimport { BsArrowLeft } from 'react-icons/bs';\nimport Loader from 'components/Loader/Loader';\nimport BackLink from 'components/BackLink/BackLink';\nconst MovieInfo = lazy(() => import('../components/MovieInfo/MovieInfo'));\nconst AdditionalInfo = lazy(() =>\n  import('../components/AdditionalInfo/AdditionalInfo')\n);\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    setIsLoading(true);\n    getMovieDetails(movieId)\n      .then(data => {\n        setMovie(data);\n        setIsLoading(false);\n      })\n      .catch(err => console.error(err));\n  }, [movieId]);\n\n  return (\n    <div style={{ maxWidth: 1440, marginLeft: 'auto', marginRight: 'auto' }}>\n      <BackLink to={backLinkRef.current}>\n        <BsArrowLeft />\n      </BackLink>\n      {movie && <MovieInfo movie={movie} />}\n      {movie && <AdditionalInfo />}\n      {isLoading && <Loader />}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiMTZlYWZhMmEzOTE3ZDU3ZGQzMGRhOTZhOWQxOTg5MCIsInN1YiI6IjY0ODgzZjcyZTI3MjYwMDBjOTMyMjM2YSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.XdPSLtTSAZv4fw0M0gYehYEL9mjnuAiltEwvVoL-DaE',\n  },\n};\n\nexport const getTrending = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?language=en-US`,\n    options\n  );\n  const data = response.data;\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(`${BASE_URL}movie/${movieId}`, options);\n  const data = response.data;\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits`,\n    options\n  );\n  const data = response.data;\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews`,\n    options\n  );\n  const data = response.data;\n  return data;\n};\n\nexport const getMoviesByName = async queryName => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?query=${queryName}&page=1`,\n    options\n  );\n  const data = response.data;\n  return data;\n};\n\n// search movie by name\n// fetch(\n//   'https://api.themoviedb.org/3/search/movie?query={name}&page=1',\n//   options\n// )\n//   .then(response => response.json())\n//   .then(response => console.log(response))\n//   .catch(err => console.error(err));\n\n// get details by movie Id\n//api.themoviedb.org/3/movie/{movie_id}\n\n// get cast by movie id\n//api.themoviedb.org/3/movie/{movie_id}/credits\n\n// get reviews by movie Id\n//api.themoviedb.org/3/movie/{movie_id}/reviews\n"],"names":["StyledLink","styled","Link","to","children","MovieInfo","lazy","AdditionalInfo","useState","movie","setMovie","isLoading","setIsLoading","movieId","useParams","location","useLocation","backLinkRef","useRef","state","from","useEffect","getMovieDetails","then","data","catch","err","console","error","style","maxWidth","marginLeft","marginRight","current","Loader","BASE_URL","options","method","headers","accept","Authorization","getTrending","axios","response","getMovieCast","getMovieReviews","getMoviesByName","queryName"],"sourceRoot":""}