{"version":3,"file":"static/js/577.9a8f0a21.chunk.js","mappings":"mRAGaA,GAAaC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,id,SCGvB,EAJiB,SAAC,GAAsB,IAApBE,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SACtB,OAAO,SAACJ,EAAD,CAAYG,GAAIA,EAAhB,SAAqBC,GAC7B,E,SCFYC,GAAiBJ,EAAAA,EAAAA,GAAO,MAAPA,CAAH,wDAKdK,GAAcL,EAAAA,EAAAA,GAAO,MAAPA,CAAH,0CAGXM,GAAaN,EAAAA,EAAAA,GAAO,KAAPA,CAAH,uFAMVO,GAAYP,EAAAA,EAAAA,GAAO,IAAPA,CAAH,oEAKTQ,GAAiBR,EAAAA,EAAAA,GAAO,OAAPA,CAAH,mEAKdS,GAAgBT,EAAAA,EAAAA,GAAO,KAAPA,CAAH,mEAKbU,GAAQV,EAAAA,EAAAA,GAAO,IAAPA,CAAH,4CCQlB,EA5BkB,SAAC,GAAe,IAAbW,EAAY,EAAZA,MACnB,OACE,UAACP,EAAD,WACGO,EAAMC,aACL,SAACP,EAAD,CACEQ,IAAG,yCAAoCF,EAAMC,aAC7CE,IAAKH,EAAMI,SAGb,SAACV,EAAD,CAAaQ,IAAKG,EAAcF,IAAKH,EAAMI,SAE7C,4BACE,SAACT,EAAD,UAAaK,EAAMI,SACnB,UAACR,EAAD,YACE,SAACC,EAAD,UAAgB,gBACfG,EAAMM,iBAET,SAACR,EAAD,UAAe,eACf,SAACF,EAAD,UAAYI,EAAMO,YAClB,SAACT,EAAD,UAAe,WACdE,EAAMQ,OAAOC,KAAI,SAAAC,GAChB,OAAO,SAACX,EAAD,UAAuBW,EAAMC,MAAjBD,EAAME,GAC1B,SAIR,EClCYC,GAAkBxB,EAAAA,EAAAA,GAAO,KAAPA,CAAH,gHAOfyB,GAAiBzB,EAAAA,EAAAA,GAAO,KAAPA,CAAH,4GAOd0B,GAAiB1B,EAAAA,EAAAA,GAAO2B,EAAAA,GAAP3B,CAAH,sSCO3B,EAjBuB,WACrB,OACE,iCACE,SAACwB,EAAD,UAAiB,4BACjB,UAACC,EAAD,YACE,yBACE,SAACC,EAAD,CAAgBxB,GAAG,OAAnB,SAA0B,YAE5B,yBACE,SAACwB,EAAD,CAAgBxB,GAAG,UAAnB,SAA6B,kBAGjC,SAAC,KAAD,MAGL,ECaD,EA3BqB,WAAO,IAAD,IACzB,GAA0B0B,EAAAA,EAAAA,UAAS,MAAnC,eAAOjB,EAAP,KAAckB,EAAd,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAYnD,OAVAC,EAAAA,EAAAA,YAAU,WACRT,GAAa,IACbU,EAAAA,EAAAA,IAAgBT,GACbU,MAAK,SAAAC,GACJd,EAASc,GACTZ,GAAa,EACd,IACAa,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAlB,GACb,GAAE,CAACb,KAGF,iCACE,SAAC,EAAD,CAAU9B,GAAIkC,EAAYY,QAA1B,SAAmC,YAClCrC,IAAS,SAAC,EAAD,CAAWA,MAAOA,IAC3BA,IAAS,SAAC,EAAD,IACTmB,IAAa,SAACmB,EAAA,EAAD,MAGnB,C","sources":["components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/MovieInfo.jsx","components/AdditionalInfo/AdditionalInfo.styled.jsx","components/AdditionalInfo/AdditionalInfo.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\ndisplay: block;\nwidth: 110px;\n  border: 2px solid #31d0aa;\n  background-color: #ffffff;\n  border-radius: 10px;\n  padding: 8px 16px;\n  color: #111111;\n  text-transform: uppercase;\n  font-size: 16px;\n  font-weight: 600;\n  margin-bottom: 16px;\n  transition: \n    color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    color: #ffffff;\n    background-color: #31d0aa;\n`;\n","import { StyledLink } from 'components/BackLink/BackLink.styled';\n\nconst BackLink = ({ to, children }) => {\n  return <StyledLink to={to}>{children}</StyledLink>;\n};\n\nexport default BackLink;\n","import styled from '@emotion/styled';\n\nexport const MovieContainer = styled('div')`\n  display: flex;\n  gap: 24px;\n`;\n\nexport const MoviePoster = styled('img')`\n  height: 500px;\n`;\nexport const MovieTitle = styled('h2')`\n  margin-bottom: 16px;\n  color: #31d0aa;\n  font-size: 32px;\n`;\n\nexport const MovieText = styled('p')`\n  margin-bottom: 12px;\n  font-size: 20px;\n`;\n\nexport const UserScoreTitle = styled('span')`\n  font-weight: 600;\n  margin-right: 8px;\n`;\n\nexport const MovieSubtitle = styled('h3')`\n  font-size: 24px;\n  margin-bottom: 8px;\n`;\n\nexport const Genre = styled('p')`\n  font-size: 20px;\n`;\n","import defaultImage from 'images/defaultImage.jpg';\nimport {\n  MovieContainer,\n  MoviePoster,\n  MovieTitle,\n  MovieText,\n  UserScoreTitle,\n  MovieSubtitle,\n  Genre,\n} from 'components/MovieInfo/MovieInfo.styled';\n\nconst MovieInfo = ({ movie }) => {\n  return (\n    <MovieContainer>\n      {movie.poster_path ? (\n        <MoviePoster\n          src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n          alt={movie.title}\n        />\n      ) : (\n        <MoviePoster src={defaultImage} alt={movie.title} />\n      )}\n      <div>\n        <MovieTitle>{movie.title}</MovieTitle>\n        <MovieText>\n          <UserScoreTitle>User score:</UserScoreTitle>\n          {movie.vote_average}\n        </MovieText>\n        <MovieSubtitle>Overview:</MovieSubtitle>\n        <MovieText>{movie.overview}</MovieText>\n        <MovieSubtitle>Genres</MovieSubtitle>\n        {movie.genres.map(genre => {\n          return <Genre key={genre.id}>{genre.name}</Genre>;\n        })}\n      </div>\n    </MovieContainer>\n  );\n};\n\nexport default MovieInfo;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const AdditionalTitle = styled('h3')`\n  font-size: 24px;\n  margin-bottom: 16px;\n  margin-top: 16px;\n  text-align: center;\n`;\n\nexport const AdditionalList = styled('ul')`\n  display: flex;\n  justify-content: center;\n  gap: 24px;\n  margin-bottom: 16px;\n`;\n\nexport const AdditionalLink = styled(NavLink)`\n  color: #111111;\n  display: block;\n  padding: 10px 20px;\n  font-weight: 600;\n  font-size: 16px;\n  text-transform: uppercase;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &.active {\n    color: #31d0aa;\n  }\n  &:hover {\n    color: #31d0aa;\n  }\n`;\n","import { Outlet } from 'react-router-dom';\nimport {\n  AdditionalTitle,\n  AdditionalList,\n  AdditionalLink,\n} from 'components/AdditionalInfo/AdditionalInfo.styled';\n\nconst AdditionalInfo = () => {\n  return (\n    <>\n      <AdditionalTitle>Additional information</AdditionalTitle>\n      <AdditionalList>\n        <li>\n          <AdditionalLink to=\"cast\">Cast</AdditionalLink>\n        </li>\n        <li>\n          <AdditionalLink to=\"reviews\">Reviews</AdditionalLink>\n        </li>\n      </AdditionalList>\n      <Outlet />\n    </>\n  );\n};\n\nexport default AdditionalInfo;\n","import { useParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect, useRef } from 'react';\nimport { getMovieDetails } from 'services/fetchAPI';\nimport Loader from 'components/Loader/Loader';\nimport BackLink from 'components/BackLink/BackLink';\nimport MovieInfo from 'components/MovieInfo/MovieInfo';\nimport AdditionalInfo from 'components/AdditionalInfo/AdditionalInfo';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    setIsLoading(true);\n    getMovieDetails(movieId)\n      .then(data => {\n        setMovie(data);\n        setIsLoading(false);\n      })\n      .catch(err => console.error(err));\n  }, [movieId]);\n\n  return (\n    <>\n      <BackLink to={backLinkRef.current}>Go back</BackLink>\n      {movie && <MovieInfo movie={movie} />}\n      {movie && <AdditionalInfo />}\n      {isLoading && <Loader />}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["StyledLink","styled","Link","to","children","MovieContainer","MoviePoster","MovieTitle","MovieText","UserScoreTitle","MovieSubtitle","Genre","movie","poster_path","src","alt","title","defaultImage","vote_average","overview","genres","map","genre","name","id","AdditionalTitle","AdditionalList","AdditionalLink","NavLink","useState","setMovie","isLoading","setIsLoading","movieId","useParams","location","useLocation","backLinkRef","useRef","state","from","useEffect","getMovieDetails","then","data","catch","err","console","error","current","Loader"],"sourceRoot":""}